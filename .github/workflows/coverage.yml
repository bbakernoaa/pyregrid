name: Coverage

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Needed for coverage reporting

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[all]

    - name: Run tests with coverage
      run: |
        pytest --cov=pyregrid --cov-report=xml --cov-report=html --cov-report=term-missing --cov-fail-under=90 --cov-branch

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        files: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true

    - name: Upload coverage reports to artifacts
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: |
          htmlcov/
          coverage.xml
          coverage.json
          coverage.lcov

  coverage-check:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Download coverage artifact
      uses: actions/download-artifact@v4
      with:
        name: coverage-report
        path: coverage/

    - name: Check coverage threshold
      run: |
        python -c "
        import xml.etree.ElementTree as ET
        tree = ET.parse('coverage/coverage.xml')
        root = tree.getroot()
        line_rate = float(root.get('line-rate'))
        branch_rate = float(root.get('branch-rate'))
        print(f'Line coverage: {line_rate:.2%}')
        print(f'Branch coverage: {branch_rate:.2%}')
        if line_rate < 0.90:
            print('ERROR: Line coverage below 90% threshold')
            exit(1)
        if branch_rate < 0.80:
            print('WARNING: Branch coverage below 80%')
        print('Coverage thresholds met!')
        "